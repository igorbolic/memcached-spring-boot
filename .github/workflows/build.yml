name: Build

on:
  # Triggers the workflow on push or pull request events
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

jobs:
  build:
    name: Build
    # Skip main build (JDK versions build) once the pull request is merged into master.
    # Once PR is merged the release-snapshot action should handle the SNAPSHOT
    # build and release, and publish the Sonar analysis.
    if: github.repository == 'sixhours-team/memcached-spring-boot' && github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v3
      - name: Setup Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Execute Gradle build
        run: |
          echo "Build Branch => Branch [$GITHUB_REF_NAME]"
          ./gradlew build
      - name: Run code analysis
        if: ${{ github.event_name != 'pull_request'}}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          echo "Run SonarQube Analysis => Branch [$GITHUB_REF_NAME]"
          ./gradlew build sonar --info
